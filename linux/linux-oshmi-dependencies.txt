# OSHMI Linux Mint 19 "Tara" Xfce Edition 32 bits.

Network Conections (editar IP, mask, gateway).

sudo apt-get remove thunderbird hexchat transmission-gtk
sudo apt-get update 
sudo apt-get dist-upgrade

sudo apt-get install chromium-browser nginx sqlite3 wget curl php php-fpm php-cgi php-gd php-sqlite3 libcap2-bin x11-utils ttf-mscorefonts-installer

sudo apt-get remove apache2

#for QT dev
sudo apt-get install qt5-default qtcreator g++ qtdeclarative5-dev cmake build-essential libx11-xcb-dev libglu1-mesa-dev libxrender-dev libasyncns0

Install wine 4.xx

# if linux is 64bits add i386
# sudo dpkg --add-architecture i386 

wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'
sudo apt-get update
sudo apt install --install-recommends winehq-stable

# if linux is 64bits add 32bit wine prefix
# rm -rf $HOME/.wine
# WINEPREFIX="$HOME/.wine" WINEARCH=win32 wine wineboot

# winetrick antigo não consegue pegar fontes extras 
wget  https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
chmod +x winetricks 
winetricks corefonts consolas lucida tahoma pptfonts
winetricks wmi

# install OHSMI as "operator"
wine oshmi..setup.exe

# XFCE
Gerenciador de Energia | Tela (desmarcar "Manipula gerenciamento de ...") | Gerenciador de Energia | Segurança (escolher Nunca "Automaticamente bloquear a sessão", desmarcar "Bloquear a tela quando..."


ln -s .wine/drive_c/oshmi/ oshmi
cd oshmi
mv nginx_php nginx_php
sudo usermod -a -G operator www-data.win
mv browser browser.win
mv browser-data browser-data.win

#operator = user where WINE/OSHMI is installed
sudo usermod -a -G operator www-data
sudo usermod -a -G oshmi www-data

cd ../linux
# removes stuff that are not needed to run on linux
rm -rf ../db/*.bat
rm -rf ../bin/mon_proc.exe
rm -rf ../nginx_php


sudo nano /etc/php/7.2/fpm/pool.d/www.conf
listen.allowed.clients=127.0.0.1,IP_IHM1,IP_IHM2

sudo nano /etc/nginx/sites-enabled/default 
------------------------------------------------
server {
	listen 51909 default_server;
	listen [::]:51909 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /home/ceee/oshmi/;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
        allow 127.0.0.1;
        allow 192.168.3.2;
        allow 192.168.3.3;
	}


    # blocks access to files other than those inside /htdocs and /svg and partially in the /conf folder.
    location ~ /(bin|browser|browser-data|conf_templates|db|etc|extprogs|linux|nginx_php|scripts|conf/point_list.txt|conf/point_calc.txt|conf/hmi.ini|conf/hmishell.ini|conf/qtester104.ini|conf/nginx_access_control.conf|conf/nginx_http.conf|conf/nginx_https.conf|conf/nginx.crt|conf/nginx.key|conf/ca.crt) {
       deny all;
       return 404;
    }

    # reverse proxy, redirect ajax requests to OSHMI webserver.exe
    # to be disabled for secure access (https) only
    location /htdocs/pntserver.rjs {
        proxy_pass         http://127.0.0.1:51908/htdocs/pntserver.rjs;
    }

    # reverse proxy, redirect ajax requests to OSHMI webserver.exe
    location /htdocs/shellapi.rjs {
        proxy_pass         http://127.0.0.1:51908/htdocs/shellapi.rjs;
    }

    # use utf8 for OSHMI SVG content
    location ~ .svg$ {
       add_header Content-Type "image/svg+xml;charset=UTF-8"; 
       root           /home/ceee/oshmi/;
    }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	    # With php7.0-cgi alone:
		# fastcgi_pass 127.0.0.1:9000;
	    # With php7.0-fpm:
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
}
-----------------------------------------------



#cria grupo oshmi
sudo groupadd oshmi
sudo useradd operator
sudo usermod -G oshmi operator
cd .wine
sudo chown -R :oshmi *.*
sudo chmod -R g+w *.*
cd /home/operator

# instructions to to install mongodb 4
https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/
# instructions to to install wine 4
https://computingforgeeks.com/how-to-install-wine-4-on-ubuntu-18-04-linux-mint-19/

